version: '3.7'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es01data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es02data:/usr/share/elasticsearch/data
    ports:
      - 9201:9200
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    environment:
      - SERVER_NAME=kibana.localhost
      - ELASTICSEARCH_HOSTS=["http://es01:9200","http://es02:9200"]
    depends_on:
      - es01
      - es02
    ports:
      - 5601:5601
    networks:
      - esnet

  dummy-service:
    image: python:3.8-slim
    container_name: dummy-service
    volumes:
      - ./dummy-logs:/usr/src/app
    command: >
      /bin/bash -c "
      mkdir -p /usr/src/app &&
      while true; do
        echo '{\"timestamp\": \"'$(date --iso-8601=seconds)'\", \"level\": \"INFO\", \"message\": \"Sample log message with random number: '$$RANDOM'\"}' >> /usr/src/app/test.log;
        sleep 1;
      done"

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.10.0
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./dummy-logs:/usr/src/app
    depends_on:
      - es01
      - es02
    networks:
      - esnet

volumes:
  es01data:
  es02data:

networks:
  esnet:
